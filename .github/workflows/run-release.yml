name: Sync OpenWRT Releases

on:
  schedule:
    - cron: '0 0 */3 * *'  # Проверка новых релизов раз в три дня
  workflow_dispatch:  # Возможность вручную запустить Action

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Checkout репозитория
      - name: Checkout your repo
        uses: actions/checkout@v2

      # Шаг 2: Извлечение тега релиза
      - name: Extract first release tag
        id: get_release
        run: |
          pip install requests beautifulsoup4
          python -c "
          import requests
          from bs4 import BeautifulSoup
          import re

          url = 'https://github.com/immortalwrt/immortalwrt/tags'
          response = requests.get(url)
          soup = BeautifulSoup(response.text, 'html.parser')

          first_tag = soup.find('a', {'class': 'Link--primary', 'href': re.compile(r'^/immortalwrt/immortalwrt/releases/tag/v\d+\.\d+\.\d+')})

        if first_tag:
            print(first_tag.text.strip())
        else:
            print('Тег не найден')
         " 

          echo "RELEASE_TAG=$(python -c 'import requests; from bs4 import BeautifulSoup; import re; url = \"https://github.com/immortalwrt/immortalwrt/tags\"; response = requests.get(url); soup = BeautifulSoup(response.text, \"html.parser\"); first_tag = soup.find(\"a\", {\"class\": \"Link--primary\", \"href\": re.compile(r\"^/immortalwrt/immortalwrt/releases/tag/v\d+\.\d+\.\d+\")}); print(first_tag.text.strip() if first_tag else \"Not found\")')" >> $GITHUB_ENV

      # Шаг 3: Проверка, существует ли релиз в репозитории
      - name: Check if release exists in your repo
        id: check_release
        run: |
          curl -s https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ env.RELEASE_TAG }} | jq -r .tag_name || echo "Not found"

      # Шаг 4: Создание релиза, если он не найден
      - name: Create release in your repo
        if: steps.check_release.outputs.tag_name == 'Not found'
        run: |
          ART="
          -----------------------------------------------------
          immortalwrt ${{ env.RELEASE_TAG }}
          -----------------------------------------------------"
          curl -X POST https://api.github.com/repos/samara15321/awg-immortalwrt/releases \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'${{ env.RELEASE_TAG }}'",
              "name": "Build amnezia wg for all devices with openwrt '${{ env.RELEASE_TAG }}'",
              "body": "'"${ART}"'\n\nAutomatically created release for OpenWRT '${{ env.RELEASE_TAG }}'."
            }'
